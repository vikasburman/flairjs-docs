{
    "version": { "title": "1.x", "path": "v1" },
    "path": "//jsfiddle.net/vikasburman/",
    "groups": [
        { "id": "basic", "title": "Basic", "list": [
            
            { "id": "basic/qh4batz1", "title": "Hello World!", "tabs": "html,js", 
            "desc": "The customary, there-you-go example.", 
            "tips": ["<code>flair</code> is a global variable added by loading flair.js library.",
            "Use <code>flair.info</code> to check version details."] },
            
            { "id": "basic/rjvpc39e", "title": "Class", "tabs": "js", 
            "desc": "Simple class definition, the flair way.", 
            "tips": ["Flair keywords are available when code is bundled inside flair assembly, for other uses, include all required keywords as <br/><code>const { Class, typeOf } = flair;</code> before their use.",
            "Note <code>Class</code> starts with capital 'C', and 'O' in <code>typeOf</code> is capital as well. Therefore no conflict with ES6's 'class' and javascript's 'typeof'.",
            "<code>pr()</code> is not a flair keyword, but a helper function to print lines in result area here."] },
            
            { "id": "basic/qowbu3tj", "title": "Derived Class", "tabs": "js", 
            "desc": "Single parent inheritance with member overriding.", 
            "tips": ["<code>$$(...)</code> function defines the scope identifiers and attributes for member definition following it.",
            "<code>virtual</code> members can be overridden in derived class using <code>override</code>."] },
            
            { "id": "basic/do40h239", "title": "Abstract Class and Members", "tabs": "js", 
            "desc": "Abstract class and/or abstract members with controlled overriding.", 
            "tips": ["<code>abstract</code> and <code>virtual</code> members can be overridden in derived class using <code>override</code>.",
            "Further overriding of a member can be stopped using <code>sealed</code> when overriding.",
            "Further deriving from a class can be stopped using <code>sealed</code> on class."] }
            
            ]},
        { "id": "advanced", "title": "Advanced", "list": [
        ]}
    ]
}