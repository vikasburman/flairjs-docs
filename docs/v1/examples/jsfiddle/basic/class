INCLUDE:
https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.8/vue.min.js
https://flairjs.com/v1/examples/js/flair.js
https://flairjs.com/v1/examples/js/helper.js

CSS:
HTML:

JS:

let Vehicle = Class('Vehicle', function() {
  // constructor - 'construct' is a special named method 
  // to represent constructor
  this.construct = (vehicleName) => {
    this.name = vehicleName;
    pr(this.name + ' constructor called.');
  };

  // property
  this.name = '';

  // method
  this.start = () => {
    pr(this.name + ' start method called.');
  };
});

// NOTE: Look at the Result area, to see how code is executed
// here onwards

pr('** Construction **');
// create instance with constructor arguments
let v1 = new Vehicle('BMW');

// try calling constructor method manually
try {
  v1.construct();
} catch (err) {
  pr(err + ' <-- constructor cannot be called manually.');
}

pr('** Public Members Access **', '-');
// call method normally
v1.start();

// access/set property normally
v1.name = 'Ford';
pr(v1.name + ' <-- property can be changed.');


pr('** Instance Object is Secure **', '-');
// instance object is secure, cannot add/delete/redefine members
// try delete
delete v1.name;
pr(v1.name + ' <-- member cannot be deleted.');

// try add
v1.newName = 'New Property';
pr(v1.newName + ' <-- member cannot be added.');

// try redefining the method
v1.start = () => {
  throw 'updated method';
};
v1.start();
pr('^-- same old method is called, member cannot be redefined.');


pr('** Class and Instance Types **', '-');
// class and instances are identifiable separately
pr(typeOf(Vehicle) + ' <-- type of Vehicle (class) variable.');
pr(typeOf(v1) + ' <-- type of v1 (instance) variable.');

// class name can be known both from class or instance variable
pr(getTypeName(Vehicle) + ' <-- class name extracted from class variable.');
pr(getTypeName(v1) + ' <-- class name extracted from instance variable.');

// class is available from instance too
pr(getTypeName(getTypeOf(v1)) + ' <-- class name extracted from class, which is extracted from instance variable.');
